[mcu oams_mcu1]
canbus_uuid: f8fa27e04caf

[temperature_sensor oams_temperature]
sensor_type: HDC1080
i2c_address: 64 # this is the address of the device as given by TI
i2c_mcu: oams_mcu1
i2c_bus:i2c0
#i2c_software_scl_pin:oams:PB6
#i2c_software_sda_pin:oams:PB7
i2c_speed:200000
temp_offset = 0.0
humidity_offset = 0.0

temp_resolution = 14 # given in bits
humidity_resolution = 14 # given in bits

[oams oams1]
mcu:oams_mcu1
fps_upper_threshold: 0.6
fps_lower_threshold: 0.3
fps_is_reversed: false
f1s_hes_on: 0.1, 0.1, 0.1, 0.1
f1s_hes_is_above: false
hub_hes_on:0.85, 0.85, 0.85, 0.85
hub_hes_is_above: true
ptfe_length: 1776
current_target: 0.30
current_kp: 3.0
current_ki: 0.0 
current_kd: 0.0
oams_idx: 1

[filament_group T0]
group: oams1-0

[filament_group T1]
group: oams1-1

[filament_group T2]
group: oams1-2

[filament_group T3]
group: oams1-3

[oams_manager]

[fps main_fps]
pin: fps:PA3
reversed: true

[filament_switch_sensor m4_left_runout]
switch_pin: ^!PG13
pause_on_runout: False
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
#runout_gcode:
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
#insert_gcode:
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
#event_delay: 3.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.


[stepper_follower m4_left]
fps: main_fps
extruder: extruder
step_pin: fps:PB1
dir_pin: fps:PB2
enable_pin: !fps:PC13
rotation_distance: 17.383416 # this is the 100mm extrude distance without following 16.555634303    #Bondtech 5mm Drive Gears
# Reverse M4
gear_ratio: 20:80
microsteps: 32
#pressure_advance: 0.030175
##  Default is 0.040, leave stock
#pressure_advance_smooth_time: 0.040

[tmc2209 stepper_follower m4_left]
uart_pin: fps:PC5
tx_pin: fps:PC4
uart_address: 3
interpolate: False
run_current: 1.1
sense_resistor: 0.110
stealthchop_threshold: 0

[stepper_follower m4_right]
fps: main_fps
extruder: extruder
step_pin: PE2
dir_pin: !PE3
enable_pin: !PD4
rotation_distance: 17.383416 # this is the 100mm extrude distance without following 16.555634303    #Bondtech 5mm Drive Gears
# Reverse M4
gear_ratio: 20:80
microsteps: 32
#pressure_advance: 0.030175
##  Default is 0.040, leave stock
#pressure_advance_smooth_time: 0.040

[tmc2209 stepper_follower m4_right]
uart_pin: PE1
uart_address: 0
interpolate: False
run_current: 1.1
sense_resistor: 0.110
stealthchop_threshold: 0


[gcode_macro CUT_FILAMENT]
variable_stage_position_x = 35
variable_stage_position_y = 350
variable_cut_position_x = 12
variable_cut_position_y = 350
variable_stage_speed = 3000
variable_cut_speed = 1000

gcode:
  G0 X{stage_position_x} Y{stage_position_y} F{stage_speed}
  G0 X{cut_position_x} Y{cut_position_y} F{cut_speed}
  G0 X{stage_position_x} Y{stage_position_y} F{stage_speed}
  M400 ; wait for all moves to end

[gcode_macro SAFE_UNLOAD_FILAMENT]
gcode:
    {% set UNLOAD_SPEED = 1000 %}
    FOLLOWER ENABLE=1 DIRECTION=0
    G1 E-{printer["gcode_macro _TX"].retract_length}
    CUT_FILAMENT
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=1
    M83
    G1 E-{printer["gcode_macro _TX"].extrusion_unload_length} F{UNLOAD_SPEED}
    M400
    UNLOAD_FILAMENT
    M400


[gcode_macro _TX]
# Bambulab X1 Clone
variable_hotend_meltzone_compensation = 0

#sherpa
#variable_extrusion_reload_length = 28
#variable_extrusion_unload_length = 30

#miro
variable_retract_length = 20
variable_extrusion_reload_length = 25.6 
#38
variable_extrusion_unload_length = 32 
#40

#variable_unload_speed = 20000 ; for fast unload use -> 20000 (this method may cause reset=1 from the TMC driver depending on the amount of current available to the step motor)
variable_reload_speed = 1000
gcode:
    {% set GROUP = params.GROUP %}
    {% set LOADED_GROUP = printer['oams_manager'].current_group %}
    {% set UNLOAD_LENGTH = extrusion_unload_length %}
    {% set RELOAD_LENGTH = (extrusion_reload_length + retract_length + hotend_meltzone_compensation) %}

    # this is a fix for orca slicer's mishandling of change overs during object exclusion
    # Orcas issued a change over of color without first ending the currently excluded object
    # we are now going to ignore change overs if we are ignoring the excluding object
    # because of this bug, the starting color on the next object after exclusionn might not be correct
    {% if printer.exclude_object.current_object not in printer.exclude_object.excluded_objects %}
      RESPOND TYPE=command MSG='Spool {LOADED_SPOOL} is loaded'
      {% if LOADED_GROUP != GROUP %}
        {% if LOADED_GROUP is not none %}
          SAFE_UNLOAD_FILAMENT
        {% endif %}
        LOAD_FILAMENT GROUP={GROUP}
        M400
        G1 E{RELOAD_LENGTH} F{reload_speed}
        M400
        SAVE_GCODE_STATE NAME=purge_ready
        G0 Z{10}
        CLEAN_NOZZLE
        RESTORE_GCODE_STATE NAME=purge_ready MOVE=1 MOVE_SPEED=100
      {% endif %}
    {% endif %}

[gcode_macro T0]
gcode:
  _TX GROUP=T0

[gcode_macro T1]
gcode:
  _TX GROUP=T1

[gcode_macro T2]
gcode:
  _TX GROUP=T2

[gcode_macro T3]
gcode:
  _TX GROUP=T3

[gcode_macro T4]
gcode:
  _TX GROUP=T4

[gcode_macro T5]
gcode:
  _TX GROUP=T5

[gcode_macro T6]
gcode:
  _TX GROUP=T6

[gcode_macro T7]
gcode:
  _TX GROUP=T7

[gcode_macro T8]
gcode:
  _TX GROUP=T8

[gcode_macro T9]
gcode:
  _TX GROUP=T9

[gcode_macro T10]
gcode:
  _TX GROUP=T10

[gcode_macro T11]
gcode:
  _TX GROUP=T11

[gcode_macro T12]
gcode:
  _TX GROUP=T12

[gcode_macro T13]
gcode:
  _TX GROUP=T13

[gcode_macro T14]
gcode:
  _TX GROUP=T14

[gcode_macro T15]
gcode:
  _TX GROUP=T15

[gcode_macro TEST_CHANGEOVER]
gcode:
  {% for i in range(120) %}
     G1 E20 F400
     M400
  {% endfor %}

# [gcode_macro TORTURE_TEST]
# gcode:
#   {% set num = params.LOOPS|int %}
#   {% for i in range(num) %}
#        T0
#        T1
#        T2
#        T3
#        RESPOND TYPE=command MSG='Number of loops now {i+1}'
#   {% endfor %}

# [gcode_macro OAMS_TORTURE_TEST]
# gcode:
#   {% set }
#   {% set num = params.LOOPS|int %}
#   {% for i in range(num) %}
#        {% for j in range(4) %}
#             OAMS_LOAD_SPOOL OAMS=1 SPOOL={j}
#             OAMS_UNLOAD_SPOOL OAMS=1
#        {% endfor %}
#        RESPOND TYPE=command MSG='Number of loops now {i+1}'
#   {% endfor %}