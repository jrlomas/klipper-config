[mcu oams]
#canbus_uuid: b632aa586691
# BLUE
#canbus_uuid: 4abed2a8406b
# GREEN
canbus_uuid: 510e20333942

[temperature_sensor oams_temperature]
sensor_type: HDC1080
i2c_address: 64
#   The i2c address of the device. This must specified as a decimal
#   number (not in hex). The default depends on the type of device.
i2c_mcu: oams
#   The name of the micro-controller that the chip is connected to.
#   The default is "mcu".
i2c_bus:i2c1
#   If the micro-controller supports multiple I2C busses then one may
#   specify the micro-controller bus name here. The default depends on
#   the type of micro-controller.
#i2c_software_scl_pin:oams:PB6
#i2c_software_sda_pin:oams:PB7
#   Specify these parameters to use micro-controller software based
#   I2C "bit-banging" support. The two parameters should the two pins
#   on the micro-controller to use for the scl and sda wires. The
#   default is to use hardware based I2C support as specified by the
#   i2c_bus parameter.
i2c_speed:200000
#   The I2C speed (in Hz) to use when communicating with the device.
#   The Klipper implementation on most micro-controllers is hard-coded
#   to 100000 and changing this value has no effect. The default is
#   100000. Linux, RP2040 and ATmega support 400000.

temp_offset = 0.0
humidity_offset = 0.0

temp_resolution = 14 # given in bits
humidity_resolution = 14 # given in bits

[oams oams1]

board_revision: 1.4
filament_diameter: 1.75
oams_database_name: oams.db
load_slow_clicks: 811
fast_unload: False 

# OAMS encoder config
encoder_pins: oams:PB12, oams:PB11

# OAMS HES switches config
hub_switch_pins: oams:PC2, oams:PC1, oams:PC0, oams:PC3
hub_on_value_type: above
hub_on_value: 0.839915,0.850887,0.864453,0.844933
f1s_switch_pins: oams:PA0, oams:PA1, oams:PA5, oams:PC4
f1s_on_value_type: below
f1s_on_value: 0.1

# OAMS LEDs config
led_white_pins: oams:PC11, oams:PC6, oams:PB5, oams:PC9
led_red_pins: oams:PC12, oams:PC7, oams:PB4, oams: PC8
led_pwm: True
led_hardware_pwm: False
led_start_value: 0
led_cycle_time: 0.01

# OAMS First stage feeders config
dc_motor_driver_select_pin: oams:PB13
dc_motor_select_pin: oams:PB14
dc_motor_pwm_a: oams:PA6
dc_motor_pwm_b: oams:PA7
dc_motor_pwm: True
dc_motor_hardware_pwm: False
dc_motor_cycle_time: 0.01

# OAMS Filament Pressure Sensor
pressure_sensor_pin: follower:PA3 #oams:PB1
pressure_sensor_sample_count: 5
pressure_sensor_sample_time: 0.005
pressure_sensor_report_time: 0.050
pressure_sensor_bldc_schmitt_trigger_upper: 0.65
pressure_sensor_bldc_schmitt_trigger_lower: 0.30

# OAMS BLDC Config
bldc_reset_pin: oams:PC10
bldc_en_pin: oams:PA15
bldc_dir_pin: oams:PA3
bldc_pwm_pin: oams:PA4
bldc_tach_pin: oams:PA2

reverse_dc_motor_on_unload: False
reverse_adc_value: True

# bldc_pwm: True
# bldc_hardware_pwm: True
# bldc_cycle_time: 0.00002 # 20kHz



# # OAMS stepper follower config
# sf_name: oams_stepper_follower
# sf_step_pin: oams: PA14
# sf_dir_pin: oams: PA13
# sf_enable_pin: !oams: PA15
# sf_microsteps: 32
# sf_rotation_distance: 22.05
# sf_full_steps_per_rotation: 200

# [tmc2209 manual_stepper oams_stepper_follower]
# uart_pin: oams: PB10
# run_current: 0.650
# hold_current: 0.650
# stealthchop_threshold: 999999

# [extruder]
# step_pin: PB1
# dir_pin: PB2
# enable_pin: !PC13
# sensor_type: Generic 3950
# sensor_pin: PB0
# min_temp: -273.15
# max_temp: 1000
# control: watermark
# heater_pin: PB11
# nozzle_diameter: 0.4
# filament_diameter: 1.75
# min_extrude_temp: 0
# max_extrude_only_distance: 1000



# # Stepper follower internals
# rotation_distance: 19.0 # Bondtech 5mm Drive Gears
# gear_ratio: 80:20
# microsteps: 16                  # Please do not go higher than 16, this can cause 'MCU Timer too close' issues under Klipper
# full_steps_per_rotation: 200	# 200 for 1.8 degree, 400 for 0.9 degree

# [tmc2209 extruder]
# uart_pin: PC5
# tx_pin: PC4
# run_current: 0.650
# hold_current: 0.650
# stealthchop_threshold: 999999

[gcode_macro CUT_FILAMENT]
variable_stage_position_x = 18
variable_stage_position_y = 280
variable_cut_position_x = 1
variable_cut_position_y = 280
variable_stage_speed = 3000
variable_cut_speed = 1000

gcode:
  G0 X{stage_position_x} Y{stage_position_y} F{stage_speed}
  G0 X{cut_position_x} Y{cut_position_y} F{cut_speed}
  G0 X{stage_position_x} Y{stage_position_y} F{stage_speed}
  M400 ; wait for all moves to end

[gcode_macro SAFE_UNLOAD_SPOOL]
gcode:
    {% if printer.oams.fast_unload %}
       {% set UNLOAD_SPEED = 20000 %}
    {% else %}
       {% set UNLOAD_SPEED = 1000 %}
    {% endif %}
    OAMS_CHANGE_FILAMENT
    G1 E-{printer["gcode_macro _TX"].retract_length}
    CUT_FILAMENT
    OAMS_START_UNLOAD_SPOOL
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=1
    M83
    G1 E-{printer["gcode_macro _TX"].extrusion_unload_length} F{UNLOAD_SPEED}
    {% if not printer.oams.fast_unload %}
       M400
    {% endif %}
    OAMS_CONTINUE_UNLOAD_SPOOL
    M400


[gcode_macro _TX]
# Bambulab X1 Clone
variable_hotend_meltzone_compensation = 0

#sherpa
#variable_extrusion_reload_length = 28
#variable_extrusion_unload_length = 30

#miro
variable_retract_length = 20
variable_extrusion_reload_length = 38
variable_extrusion_unload_length = 40

#variable_unload_speed = 20000 ; for fast unload use -> 20000 (this method may cause reset=1 from the TMC driver depending on the amount of current available to the step motor)
variable_reload_speed = 1000
gcode:
    {% set NEXT_SPOOL = params.SPOOL|int %}
    {% set LOADED_SPOOL = printer['oams oams1'].current_spool %}
    {% set UNLOAD_LENGTH = extrusion_unload_length %}
    {% set RELOAD_LENGTH = (extrusion_reload_length + retract_length + hotend_meltzone_compensation) %}

    # this is a fix for orca slicer's mishandling of change overs during object exclusion
    # Orcas issued a change over of color without first ending the currently excluded object
    # we are now going to ignore change overs if we are ignoring the excluding object
    # because of this bug, the starting color on the next object after exclusionn might not be correct
    {% if printer.exclude_object.current_object not in printer.exclude_object.excluded_objects %}
      {% if LOADED_SPOOL != NEXT_SPOOL %}
        {% if LOADED_SPOOL is not none %}
          SAFE_UNLOAD_SPOOL
        {% endif %}
        OAMS_LOAD_SPOOL AMS=0 SPOOL={NEXT_SPOOL}
        M400
        G1 E{RELOAD_LENGTH} F{reload_speed}
        M400
        OAMS_LOADED
        SAVE_GCODE_STATE NAME=purge_ready
        G0 Z{10}
        CLEAN_NOZZLE
        RESTORE_GCODE_STATE NAME=purge_ready MOVE=1 MOVE_SPEED=100
      {% endif %}
    {% endif %}

[gcode_macro T0]
gcode:
  _TX SPOOL=0

[gcode_macro T1]
gcode:
  _TX SPOOL=1

[gcode_macro T2]
gcode:
  _TX SPOOL=2

[gcode_macro T3]
gcode:
  _TX SPOOL=3

[gcode_macro TORTURE_TEST]
gcode:
  {% set num = params.LOOPS|int %}
  {% for i in range(num) %}
       T0
       T1
       T2
       T3
       RESPOND TYPE=command MSG='Number of loops now {i+1}'
  {% endfor %}
